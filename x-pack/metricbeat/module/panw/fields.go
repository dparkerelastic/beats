// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package panw

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "panw", asset.ModuleFieldsPri, AssetPanw); err != nil {
		panic(err)
	}
}

// AssetPanw returns asset data.
// This is the base64 encoded zlib format compressed contents of module/panw.
func AssetPanw() string {
	return "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"
}
