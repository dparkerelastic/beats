// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package panw

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "panw", asset.ModuleFieldsPri, AssetPanw); err != nil {
		panic(err)
	}
}

// AssetPanw returns asset data.
// This is the base64 encoded zlib format compressed contents of module/panw.
func AssetPanw() string {
	return "eJzMne1v2ziTwL/3rxjkPjwpkLpNii7QAHeAn2Z3E6DtGk26z+G+CLQ0sniRSB1J2fX+9Qe+6NWSJTtU98liseu3mZ+GQ3JmRFJv4Bn3t5ATtnsFoKhK8RYu9MuLVwACUyQSb2GNirwCiFCGguaKcnYL//UKAMwvIeNRkeIrgJhiGslb88kbYCTDSrb+U/scb2EjeJG7d3oktqU0JVGmUMQkRFl91CdT/3XJy79effavV3oXpXVhyV7SkKQL/bL1jZLqGfc7LqLOZ0cY9N/Kia2B4EDBAQLtKvEL8HB3XL3WNiuAlgaXrMhQ0BC2JC0QKAPJCxEi/PeXz1cglaBs4z6TyBQoDpgSqWgokYgweX17oArg3S3Axa8qQcFQ1Rovrnq+e62/u9xsBG6IQqh+dbn89fXIT2/0T+/pJoHlltCUrGlK1R4u75djv3yvf/nn5+XXke990N/7zHm+JuHzyHd/0d99KhjDdOyS393CxePdm38d0X/gDhkJZ/CGL8tPQKJIoJTH1csccd7+cKjhACIq8hR/+KO4M/Ig5Cymm0IQ/b0rwMVmcQUXcZGmF8AFXCQkjS9GzKOImre3Gg23UORvI75jI77Co3lhtILSUKRQnOHmOJE2ZjCXkbRwa58r60VvraO8de+5Br1+9+7dW/3dt0U+0pwEgwyzNQp/tL9xAaQa5uqJ8QpUgkCEIHvgMVi1/RNnDZryzQyz5GcrdcokWQL4nCMP1Q9MkaVyRTa92rWAzUHbjWg3s4EiGyBS8pAShRHsqEpAJVTWTEeBtnIvPRJRoQqSgtxLhZmeeXcJDbtAsMaUs42Eo2R/cTaDo2ipVfeiTNII7YjJC2VeHGWKdx6d54FFNCQKJdDY9KjaQFRCITGCmAv9746IiLL+8apy67y/GbtvT7TTwwqWdpK1LiWLtQ5xMiKfS/NdX18vbm5uFu/fv19cv3t78/Eon56yvdnuuzaO4iAVF6ijAaq/SOyQSkNN70KEkdEo2rPAKxnc7RnJaFjrL821QYbC9NH1Hu7uP61GzfWLf/d/WG1/KdGg2f/+A+6X8FA5oE14oL+HJmSBjKzTgehqzXmKhJ0GeL+EPpkNlX4jhPtlKyK4IKGiW3xj/2NHBPdWTqTU7w1xiYIxyjaB3DOP4W49OOiRQe7DRHBG/zLxnvHyQuq5V394v4ScUFFdigax38bo4uqCcfWm81b9krLNpAsLvDd4a/RzqtphLdSY9jWVYz6S8pCkAWUxX2xRSMq7UBZYzz4nu0ubTeuAPh39NJ7jyPulDR5LFzCaIMItDbsubX15zIm7qEHkLnQhsd+rT7fhXW07kBhyFlUuHBZC6FT90Ez9jNkmU4GnGe9+6cxnmjQjjGww0zAP/SN0myQXiFmuDT1H19glqBIUxkYxFbgjaaq7QemLdhasGdI9KPKMwLcogNixw7oBFIwqbXnCjPegKvIphv43HXSbLZASFXORBVp06jFXc3INctrX0yZ3Jr9Tw2M1+uuGbI+RlWlDnuUpqhN6vBnm/Vbwnva5GaLqwLaKag/RJ4Am5Dqg+WC8dmrPb8S4xpjXNehVTZogEWqNRAFhUXN8OI8/I6HfgLM9fumrGKuQHULlXKg5Yheb/fXnNZpUCRLHNKy8NkL7y+hNQq6nuK6GX5Pwuch9OsZTgmClNjIJA23jreuR5HqQ8Sc0vuM+3Qccol9XGOTTamyzw0Xdp05s8g1RuCN7L21+hzEpUgVOZtXajrfV6INpUQvzxqdLdg150/DMiTSzO9/NyV5382858txMccN1QdMoED4jDj3srJZf3/zxCJLHakcElilGlSFx1g4GJ5AWIg2OZUNns5ZsLjT6/u0zxDRVaG7ARUSRNZGT+grJ859CSPI81a2s3zqFj3Lln6/dex74U400Pa8kW+9gfXZjim6pKGSFOAFNJQLJ7HazWk6w2DZnQZhSZP7R/mxb7c/VV7Ca4JLqIFgqkqYYvZ5AucnnguxS/p7yNUlXgisMVclbDT9DqDmisKQhZyywBSl/jH9sURB3h6xV6NLaMNQ/k3B5UeQXkCFhEvSXm59pdp6jLTiQdNDk9XV4rtB8chWNBkS7ZKM118P4pUt43eXoVF2aOokiLFrvTQ5q8g/GFSSERakeY90kNvXq5ijq3POd+VV9TQmRsEY0ZZ6D2k6j9jMO7bPK86VZ16lC+r62GOeat+ZD46qg06p5llP/ibCzVHCaBag+rDKyX9pqzmqkmtMw7UzFnC/NGk67601pb8oFVf15xlm15FKiW6Z0nhv6r4Z0ukU752m08zS2GfKNVm2jabZpRP4rBbot0Sx+aKe348lZL9kcKVov34RErQnoO5VtMk3JZNssc1tpUh7biYAScr3wHQWtNJNutDqycRFRlbYOLQvqB8wFzYjoH8fOmrUecwxpTOslDB1aKqFP53HKhk5/tryrP65uOtWcZl3plbNpXfC1xp5u4RvvLtDyzAawdtIeXcfhfkbz37yw+W/maf5jdhxSeNRL3Yj9Exu8GrsPh4BW1tDIOE6/nJ9s/OqaJrRBStlzkHFGFReUbfwvQWmF4Fob1NqmrD3o8MWEpoXAQCc71K9BP5UiQSVEgRJ0s0EhgRxgO4j6jivbDxc3OxdgNlN4Xq/5lWT1ooUOa3fzxgS4eX1gEPIMb7C8f4tPOKVlPu7B7FVSMKN3NEr3M3D7HrYfW4WqF7DTXGIYKLMnw+tS5Ye7ku5hJTEEq2KcYb4WPo1js/NH8bu7x3cWyNMj9VWUerL1O3jEFEPFBTwwqigx/7dawJNZNS0b604eVnD5bmH+KQufbN/In/orgQf4ucCYetyU8hXVjotnsHKrW6dPjxQeVldQsjIO0kaMITD3EyohwpgyjBZT2bniHnMsLS7kac8aensBl01L5+7bU+08dHPz9KLRigsFrDA7Lbqoh5hcqEmIYjZP/oYy5yxC48nTUH6aV9re9UgzmhIBisNAnzhC6tUHNVHpWeeOScKnsxkg7XBnwczVQ8+C8Vv+NiOyrLLeGkerWbgg+x+qYOk/xtGixGN5g8YxxTf3mKYZYS5KPctg6HOp4q8sFHtbdCHphguqkuw8rIRIj+a6JzJ5KVFKY/R4I+3JhIkxKtqNkB4xLMzNgqUb97U5Lx/NjuGjN9NauM9rX6BuqN/ytMg0c0aVGVwflyDwGfc6wHV/r7pIgheqvZPJ28b9Q9HHdu2vN7ktg/iNb3UrskaMW978dPUP894/f1/Z18NZgKbb2r10gb4un7s6zfoOt0/PyrZRRLlTrwFIZSPWOG7Gw2vxase2zex+QvO63ErYmXEO+OyVBgMZ1anhToXjDDiw61NrF5hxhQGRAZG+dqNo61i5sCwUZzzjhYRHu+nycvn4uowUx+6QaUDfqfCTay6JUvbcsfhVKrJOqUwwKuuWZoeT+zaVUORmpYNb8TbCPceahic9BDc2qUjKQjxYy1BI2BEJEtWw5xEptQGD7pc8bw8hUGrS9pOoqmC3dNSjiPMtZOiOJpRBtdCFR7rjxbC3gRSrB6M0NctcqE2GEUjrVg0fd+msSBUNEp4HSvUvIjjTKRSHzxr+8unp82t3816b2ih8k/C86flyAd8ZVXYxkmauO2XCc9mfFVUDlqfErH+xy3HVM6WtU/S7JXC+9jKbZYJ5ZYFqBbBupdqnRmg8msMS5Q2jDCD1r0qx80lsU2y3QNDfwP3YymvqKQ5TM8DKhOa6A5huChWGLNf6WJyLKzA7TutXGeqxvnxjeDgnmamLxxi5+1f+xqQVopBl+KUVQUsR4I8wIWyD9tq0n5hbPkyhYCQ1prik//x99dos4kQSaV/GH82PUX88eHHVKRruCgPSP+G+cMQ1lf+BiKBE6CwqKyeKYct3hwfKNp63id2ZAqB1O+W2jLW8bo1qh8iMPzYiiUYDaEd7YK3XXMDFd1Ym69Gw57leFwhUYh+YVt+S1HNqV4qFyzqweF1dWKPjawo6cGqBpuU5siDClOx9bs3V8mCNMRfm0KxI+z9h8EeODDKUkmywRT6IR6MUg4SnkW/7RSmClgsmQe5Y0XCb9jPgTXuSWAcV7h7YsGOb6l9gklmP1Bn5QbMia8yAVlHZV0PCYK3JQ6Rb3RsFz+qlgJfv4D+BcZtiD5tcW0UbZcYI2N5SbM4KJkrbEZf6E3hGzElqVzAbd7kChhuubJm61YFHLySwq0s9Xs83zAVKZKpxMyXdN1ex1q5l7qCW6eUkn6+u/aeMGUS5VF23xYHZbbSpL/WMBqik+W8BfT01bHf5sDP3cEAvN0GRR3oCpWwR8mIg7jmPq+6d2qTfV3fLp19re1adc703zuPSFNdVTyDnhfKKrkbRzfGH1ZhibyE6/ElplNwEiiuzJ8Wv0bVQDU3StMfQrVFwAp1vw/bjlWdJjucwRKqyzclmzmG5LkxonWB1VvP1jpxsU4OOQnDP9UaDpz3UyK4IT6RzFZ84JXlg2rs/iD7dru3DdhrpKs0a2VBZokqIhAsNkWNkDq1QgjBp1t40RlpXxYr4zpbAjoR0WJfE/F7X1wlXIoswRCnjQk+IrStxvt6u2A2f0GKCUxEHyHQYXTat9yv549tvcPlHoda8YBF8M8nob+Wu09egtdPTBxOGP1TC80BiGvvLzP7VOL7FjbsHh7cUEoEqrbc8sEWzmFqSjqxcRloPPmMTTnklKqEiyokY2LZy1vU8aZlvjNAGJRJllpcdXxPXZDu4gBmOyylLjmvUKYEps/TZt2qaQ5fpWrq8Enu44asuu4dbWAeSj93BKnIT9EfE5wGO341QPcccyO3oTXghPCq+1+Ig5FnOmdk3GTtFxxgyyoruwPoiii9W4HQOiSLwGXrU45wWPXR2IYkCskWhg4vrrFdznHLSZRqtTZIInFjtANdgzTvO8GE2hg/Q18T9hpiP4vo4hiLyWS5MKOo1AG3EIVrDEd19t8p8+GB56MSYfpki5nMAlILHCRTX4Zh/ACt3VP9fPFvT/pLoS9RbsUe0h3mx0COFL9f/tPoOhYnN13szBEEueDh8jqrWfzBr+SNw5wiPM7DucWy+CCrVdpEEgZzrAHmLoFXaW4CDVDRKvVKZIujgZKQ17shA/fJMjabCd1RjQn3qS4iIzMETpvYlilyN+V1ABybfMwmqoy+mECgcGPPPVa4FDts7w4yL/ZGp5gy1dq6xko8pjQV68+XfBOIElTpo96XSnBg9rnJdxLEO6UiYeLvaL0Z0fafX6pCmPHCoqMoydiSfo6W1XJD50NF1Rq33tp6i1HtrT1FK7FNY/A3Ty1LgmPqUhsgkLlz63Kv/vKc2uHzcKYjc/flltCUsxAie7IlJK4FbZIN3e0u8sQ2hCn+caKGendglKvQZo0skUdCBTnHesgcjrxFtO0VHIaiUxYC7RofnCI1ZhChs2sFUbns0dCHwR07FQPrrgcKJ12q5MqvKaGUcYLhFAX0EXUrzzeAYq6+dmqeS2e/Mu3vUMlEJfcq6QKRQSRB63bGwLFTCRXmCupYNitszoc1hVKI8l6zJ2wsZ0xRtyOV5T+BvlWA4ENyjXNK/po/WMRcZUbew3h/WiaZNl/SvahFyDTHGeNJc9gLGZcYLpmxoUZ0MORXy9LnvBaR3VD7b2RAqvacjFxKDHEU4tO6tv+hXYvf/cnTtmPmR9oEaBA4auAfWtI3PJ5A1Oopt95x3k58Kg7CFTLkK7LR2grFOul+uW69K2bS+QZhZDpbQMNFhOBGT/phGc5CUiP5axXkjvrmlIBAIAyO6c2ThMRSR94Oc3S7mQWINzUAZfFt9GQTIKAu8Q2SUmSVPp8BoE2YkncdjH1NerbY191OOIswb747r9+yfS+OTUy57IxBlEGIq6cBukDOyoTsrFj5ZsRNAnPsECrP+ReDnJODOJbVMFDY7mkBi1+75JXHrAaeR5HyH4u/sFBbg7+oSVrvvAbsZotsRm0r3jJQjFFueDqzKOKfS53YR/XkgtK207AtelZedwQgFgSEX0dBDTC2F6wd+KVxHmEARolA0No1m026Pa5OsvI4PTqQIZLH+XwxV4Hdrco/wM/mecT8PWyn4VK5o7XnjgBN4Bgf+yIOeEskLWEx+Xx0tj1dV1vH++t37m4837z98/PDxfy6/EAE3H+Hm/e2Hj7cfPsLNu/fX8PuXp9cn4QvcesZvCD3DnLYmFzCPxz40pZ5BpPMwrzBa4BkcfkslTuA5LeR5l28l8hjLqy7UNm9O197WTbXFHls0tTGn3ef2tPuFWwe5iHhGqM/DRo28/hP2nc4T6KgMzNLtmYKgzu7rQ1XH6QqJwquTf3cCS/OdbjB35mjgHQ1WVjIUL2YUuKGcBTEXbq+FP8hvRrS51dh6ZuUJdJIXIsTAQvojezRiwYo933Yhz3K/Z2J8chLtmRPlRtHTwTzvyP1kn8ZBmY0lXmS0bc5merrfn6uvtgJ9tt0SLtXQ0Rznne/DpWqceHg60SxPJFo2Hj9UPmHnZYYrz4jxtGG+fHz74aEBL0Hb9j/H+ny4xiOsz58jinVKQ1+GWxlpXuxWgXkyW4Xmw2r2LKmZxhEr/IU9wpmv3gDs3ZKNvcV+jOoe9OTJFd2c4cMVU76hLDhYjXb+EoPPWiA0Tzh7CVRQqP6NdS8Cowy+P316AZ87w62X7IwTQzpHwp0Taf5fgVIFxnA+o0wjFoxYPyFKSbpBNUNQbHE3qHqe5O4NXcrUPGDOjhH+8R8fP9vnylkFL4N3jzqd8Yjndurb97jW42TuvK3gcDPM+T2qrL6z9lab0qT1xseXwucCt5QX0iv9ygmdD9/uqZ7B8nZBTTjF/C9jn8Xwlj6fZP5+/P8PAAD//98j+x4="
}
